{"version":3,"file":"static/js/600.6eabd64d.chunk.js","mappings":"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","sources":["components/FilterForm/FilterForm.styled.js","components/FilterForm/FilterForm.js","Pages/MedicinePage/MedicinePage.js","components/HeaderStores/HeaderStores.styled.js","components/HeaderStores/HeaderStores.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Error = styled.span`\nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,16;\nletter-spacing: -0.03em;\n\n  color: #EF2447;\n  margin-bottom: 8px;\n`;\n\nexport const Form = styled.form`\npadding: ${p=>p.theme.spacing(4)};\n\n@media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    gap:${p=>p.theme.spacing(2)}\n  }\n`\n\nexport const Input = styled.input`\nmargin-bottom: ${p=>p.theme.spacing(2)};\nwidth: 100%;\nheight: 44px;\npadding: 0 0 0 20px;\nborder-radius: 60px;\nborder: 1px solid #1D1E2133;\n\n    &:hover {\n            border: 1px solid #59B17A;\n          }\n\n    &::placeholder {\n        color: #1D1E2166; \n  }\n`\n\nexport const ContainerInput = styled.div`\nposition: relative;\n`\n\nexport const Svg = styled.svg`\nposition: absolute;\ntop:30%;\nright: 10px;\n`\n\nexport const Button = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap: 8px;\nwidth: 116px;\nheight: 44px;\n\npadding: 13px 30px;\nborder-radius: 60px;\nopacity: 0px;\n\nbackground: #59B17A;\n\nfont-family: Inter;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1.29;\ntext-align: center;\ncolor: #FFFFFF;\n\n`","import { useForm } from \"react-hook-form\";\nimport Select from 'react-select';\nimport {Error, Form, Input, ContainerInput, Svg, Button} from './FilterForm.styled';\nimport { nanoid } from \"nanoid\";\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport sprite from '../../images/sprite.svg';\n\nconst SignupSchema = Yup.object().shape({\n    category: Yup.string().required('Required'),\n    name: Yup.string().required('Required'),\n\n});\n\n\nexport const FilterForm=()=>{\n    const customStyles = {\n        placeholder: (provided) => ({\n          ...provided,\n          color: '#1D1E2166', \n        }),\n        control: (provided, state) => ({\n          ...provided,\n          height: '44px',\n          padding: '0 0 0 20px',\n          marginBottom: '10px',\n          borderRadius: '60px',\n        //   height: state.isMulti ? '52px' : '42px', \n          border: state.isFocused ? '1px solid #59B17A' : '1px solid #1D1E2133',\n        //   boxShadow: state.isFocused ? '0 0 0 1px #F6B83D' : 'none',\n          '&:hover': {\n            border: '1px solid #59B17A',\n          },\n        }),\n       \n        option: (provided, state) => ({\n          ...provided,\n        //   borderRadius: '15px',\n          border: 'none',\n          padding: '0 20px',\n\n          fontFamily: 'Inter',\n          fontSize: '12px',\n          fontWeight: '400',\n          lineHeight: '1.5',\n          letterSpacing: '-0.03em',\n          color: state.isSelected ? '#fff' : '#1D1E21',\n          backgroundColor: state.isSelected ? '#59B17A' : '#fff',\n        //    color: '#1D1E21',\n\n        //   '&:hover': {\n        //     color: '#262626',\n        //   },\n        }),\n\n        indicatorSeparator: (provided) => ({\n            display: 'none',\n          }),\n      };\n\n    const { register, handleSubmit, setValue, formState: { errors },reset} = useForm({\n        resolver: yupResolver(SignupSchema),\n      });\n\n      const onSubmit = async (data, e) => {\n\n        e.preventDefault();\n        try {\n            // await dispatch(addPet(data));\n            reset();\n        } catch (errors) {\n            alert(errors.message)\n        }\n    };\n\n    const categoryOptions= [\n        \"\",\n        'Medicine',\n        'Heart',\n        'Head',\n        'Leg',\n    ]\n\n    const iscategoryOptions = categoryOptions.map(option => ({\n        key: nanoid(),\n        value: `${option}`,\n        label: `${option}`\n      }));\n\n    return(\n        <Form onSubmit={handleSubmit(onSubmit)}>\n                 <Select id=\"category\"\n                                styles={customStyles}\n                                placeholder=\"Product category\"\n                                isClearable\n                                options={iscategoryOptions}\n                               {...register('category', { required: 'Required' })}\n                               onChange={value => setValue('category', value?.value || '')}\n                        />\n                  {errors.category && <Error>{errors.category.message}</Error>}\n\n                <ContainerInput>\n                     <Input id=\"name\" \n                            \n                            placeholder=\"Search medicine\"\n    \n                              {...register('name', {\n                                required: 'Required',\n                            })} />\n                     {errors.name && <Error>{errors.name.message}</Error>}\n\n                     <Svg width={16} height={16}>\n                          <use xlinkHref={sprite + '#icon-search'}/>\n                     </Svg>\n                </ContainerInput>\n\n                <Button type=\"submit\" >\n                     <svg width={14} height={14}>\n                          <use xlinkHref={sprite + '#icon-filter'}/>\n                     </svg>\n                    Filter\n                </Button>\n                  \n\n        \n        </Form>\n    )\n}","import {HeaderStores} from '../../components/HeaderStores/HeaderStores';\nimport {FilterForm}from '../../components/FilterForm/FilterForm';\n\nexport default function MedicinePage(){\n\n\n    return(\n        <>\n          <HeaderStores title={'Medicine'}/>\n          <FilterForm/>\n      \n        </>\n    )\n}","import styled from \"styled-components\";\n\nexport const Title=styled.h2`\nmargin-top: 40px;\nmargin-bottom: 10px;\npadding-left: 20px;\nfont-family: Inter;\nfont-size: 28px;\nfont-weight: 600;\nline-height: 1,14;\ntext-align: left;\ncolor: #1D1E21;\n\n@media (min-width: 768px) {\n    font-size: 40px;\n}\n`\n\nexport const Text=styled.p`\nmargin-bottom: 40px;\nfont-family: Inter;\nfont-size: 14px;\nfont-weight: 400;\nline-height: 1,29;\ntext-align: center;\n\ncolor: #93939A;\n\n@media (min-width: 1440px) {\n    font-size: 16px;\n}\n`","import {Title, Text} from './HeaderStores.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const HeaderStores=({title})=>{\n  const location = useLocation();\n\n    return(\n        <>\n          <Title>{title}</Title>\n          {location.pathname === '/home' && <Text>Search for Medicine, Filter by your location</Text>}\n       \n        </>\n    )\n}"],"names":["Error","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","p","theme","spacing","Input","_templateObject3","ContainerInput","_templateObject4","Svg","_templateObject5","Button","_templateObject6","SignupSchema","Yup","shape","category","required","name","FilterForm","customStyles","placeholder","provided","_objectSpread","color","control","state","height","padding","marginBottom","borderRadius","border","isFocused","option","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","isSelected","backgroundColor","indicatorSeparator","display","_useForm","useForm","resolver","yupResolver","register","handleSubmit","setValue","errors","formState","reset","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","e","_context","prev","next","preventDefault","alert","message","stop","_x","_x2","apply","arguments","iscategoryOptions","map","key","nanoid","value","concat","label","_jsxs","children","_jsx","Select","id","styles","isClearable","options","onChange","width","xlinkHref","sprite","type","MedicinePage","_Fragment","HeaderStores","title","Title","Text","location","useLocation","pathname"],"sourceRoot":""}