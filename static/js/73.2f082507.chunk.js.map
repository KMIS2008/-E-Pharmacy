{"version":3,"file":"static/js/73.2f082507.chunk.js","mappings":"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","sources":["Pages/RegisterPage/RegisterPage.styled.js","Pages/RegisterPage/RegisterPage.js","components/Register/Register.styled.js","components/LoginModal/LoginModal.styled.js","components/LoginModal/LoginModal.js","components/Register/Register.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container=styled.div`\npadding: ${p=>p.theme.spacing(4)};\n\n@media (min-width: 1440px) {\n    display: flex;\n    gap: 40px;\n}\n`\n\n","import {Container} from './RegisterPage.styled';\nimport { RegisterForm } from 'components/Register/Register';\nimport { Tittle } from 'components/Title/Title';\n\nexport default function RegisterPage(){\n    return(\n        <Container>\n          <Tittle/>\n          <RegisterForm/>\n        </Container>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const Container=styled.form`\n@media (min-width: 1440px) {\n    width: ${(p) => (p.$isModal ? '100%' : '50%')};\n}\n`\n\nexport const Button=styled.button`\nmargin-bottom: 20px;\nwidth: 100%;\nheight:44px;\nborder-radius: 60px;\n\nbackground: #59B17A;\ncolor: ${p=>p.theme.colors.white};\ntext-align: center;\n\ncursor: pointer;\n\n&:hover{\n    background: #3F945F;\n}\n`\n\nexport const Input=styled.input`\nmargin-bottom: ${p=>p.theme.spacing(1)};\npadding-left: ${p=>p.theme.spacing(4)};\nwidth: 100%;\nheight: 44px;\nborder-radius: 60px;\nbackground: #FFFFFF;\noutline: none;\n\nborder: 1px solid #1D1E211A;\n\n&::placeholder{\n    padding-left: 20px;\n    font-family: Inter;\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 1,5;\n    color: #1D1E2166;\n}\n`\n\nexport const Navigate=styled.p`\nfont-family: Inter;\nfont-size: 12px;\nfont-weight: 400;\nline-height: 1,5;\ncolor: #1D1E2166;\ntext-align: center;\ncursor: pointer;\n`\n\nexport const ContainerInput=styled.div`\n@media (min-width: 768px) {\n    display: ${(p) => (p.$isModal ? 'block' : 'grid')};\n    grid-template-columns: ${(p) => (p.$isModal ? 'initial' : 'repeat(2, 1fr)')};\n    gap: ${(p) => (p.$isModal ? 'initial' : p.theme.spacing(2))};\n    margin-bottom: ${(p) => (p.$isModal ? p.theme.spacing(4) : p.theme.spacing(12))};\n}\n`\n\nexport const ContainerNavigate=styled.div`\n@media (min-width: 768px) {\n    width: 280px;\n}\n`","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nposition: relative;\npadding-top: 40px;\n`\n\nexport const SvgButton = styled.div`\ndisplay: block;\nposition:absolute;\nright: 0; top: 0;\nborder: none;\nmargin-left: auto;\n`\n\nexport const Title =styled.h1`\nmargin-bottom: ${p=>p.theme.spacing(2)};\nfont-family: Inter;\nfont-size: 28px;\nfont-weight: 600;\nline-height: 1,43;\ntext-align: center;\ncolor: #1D1E21;\n`\n\nexport const Text=styled.p`\nmargin-bottom: ${p=>p.theme.spacing(4)};\nfont-family: Inter;\nfont-size: 14px;\nfont-weight: 400;\nline-height: 1,29;\ntext-align: center;\ncolor: #6A6A6F;\n`","import Modal from \"react-modal\";\nimport sprite from '../../images/sprite.svg';\nimport { useEffect, useState } from \"react\";\nimport {Container, SvgButton, Title, Text} from './LoginModal.styled';\nimport {LoginForm} from '../Login/login';\n\nModal.setAppElement('#modal');\n\nexport const LoginModal=({isLoginModal, setLoginModal, isModal, setOpenRegisterModal})=>{\n\n    const [customStyles, setCustomStyles] = useState(getCustomStyles());\n\n    useEffect(() => {\n      const mediaQuery = window.matchMedia('(max-width: 768px)'); // Зміна на розмір планшета\n      const handleResize = () => {\n          setCustomStyles(getCustomStyles());\n      };\n\n      mediaQuery.addEventListener('change', handleResize);\n\n      return () => {\n          mediaQuery.removeEventListener('change', handleResize);\n      };\n  }, []);\n\n  function getCustomStyles() {\n    if (window.matchMedia('(max-width: 768px)').matches) { \n        return {\n          overlay: {\n            backgroundColor: \"rgba(38, 38, 38, 0.3)\",\n          },\n            content: {\n              top: \"50%\",\n              left: \"50%\",\n              right: \"auto\",\n              bottom: \"auto\",\n              marginRight: \"-50%\",\n              transform: \"translate(-50%, -50%)\",\n              padding: \"50px 70px\",\n              maxWidth: \"463px\",\n              maxHeight: \"530px\",\n              borderRadius: \"20px\",\n              backgroundColor: \"#FFFFFF\",\n            },\n        };\n    } else {\n        return {\n            overlay: {\n              backgroundColor: \"rgba(38, 38, 38, 0.3)\",\n            },\n            content: {\n              top: \"50%\",\n              left: \"50%\",\n              right: \"auto\",\n              bottom: \"auto\",\n              marginRight: \"-50%\",\n              transform: \"translate(-50%, -50%)\",\n              padding: \"40px 32px\",\n              maxWidth: \"343px\",\n              maxHeight: \"494px\",\n              borderRadius: \"20px\",\n              backgroundColor: \"#FFFFFF\",\n            },\n        };\n    }\n}\n\n    return(\n    \n        <Modal   \n          isOpen={isLoginModal}\n          onRequestClose={() => {\n            setLoginModal(false);\n          }}\n               \n          style={customStyles}\n          contentLabel=\"More info modal\"     \n        >\n            <Container>\n                <SvgButton\n                  onClick={() => {\n                    setLoginModal(false);\n                }}>\n                <svg width= '24px' height='24px'>\n                  <use xlinkHref={sprite + '#icon-x'} />\n                </svg> \n                </SvgButton>\n            </Container>\n\n            <Title>Log in to your account</Title>\n            <Text>Please login to your account before continuing.</Text>\n            <LoginForm isModal={isModal} setLoginModal= {setLoginModal} setOpenRegisterModal={setOpenRegisterModal}/>\n  \n        </Modal> \n    )\n}","import { useForm } from \"react-hook-form\";\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport{Button,Input, Navigate, ContainerInput, ContainerNavigate , Container } from './Register.styled';\nimport { useNavigate } from \"react-router-dom\";\nimport {registr} from '../../redux/auth/operations';\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport {LoginModal} from '../LoginModal/LoginModal';\n\n\nconst SignupSchema = Yup.object().shape({\n    name: Yup.string(),\n    email: Yup.string().email(\"Email must contait @\").required('Required'),\n    password: Yup.string().min(6, \"Password contain min 6 symbols\").required('Required'),\n    phone: Yup.string(),\n});\n\nexport const RegisterForm=({isModal, setOpenRegisterModal})=>{\n   const dispatch=useDispatch();\n   const navigate=useNavigate();\n   const [isLoginModal, setLoginModal]=useState(false);\n\n   const handleNavigate=async()=>{\n    if (!isModal)\n   { navigate('/login')}\n    else {\n        setLoginModal(true);\n    }\n   }\n\n    const { register, handleSubmit,\n         reset} = useForm({\n        resolver: yupResolver(SignupSchema),\n      });\n\n      const onSubmit = async (data, e) => {\n        e.preventDefault();\n        try {\n            await dispatch(registr(data));\n            reset();\n        } catch (errors) {\n            alert(errors.message)\n        }\n    };\n    return (\n\n        <Container onSubmit={handleSubmit(onSubmit)} $isModal={isModal}>\n         <ContainerInput $isModal={isModal}>\n            <Input \n                  id = \"name\" \n                  placeholder='User Name' \n                  {...register('name', { required: true })} />\n        \n             <Input type=\"email\"\n                    id = \"email\" \n                    placeholder='Email address'\n                    {...register('email', { required: true })} />\n\n             <Input \n                    id = \"phone\" \n                    placeholder='Phone number' \n                    {...register('phone', { required: true })} />\n\n             <Input \n                    id = \"password\" \n                    placeholder='Password' \n                    {...register('password', { required: true })} />        \n         </ContainerInput>\n\n         <ContainerNavigate>\n              <Button type=\"submit\" >Register</Button>\n\n              <Navigate onClick={handleNavigate}>Already have an account?</Navigate>\n         </ContainerNavigate>\n\n        <LoginModal isLoginModal={isLoginModal} setLoginModal={setLoginModal} isModal={isModal} setOpenRegisterModal={setOpenRegisterModal}/>\n      </Container>   \n      );\n}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","RegisterPage","_jsxs","children","_jsx","Tittle","RegisterForm","$isModal","Button","_templateObject2","colors","white","Input","_templateObject3","Navigate","_templateObject4","ContainerInput","_templateObject5","ContainerNavigate","_templateObject6","SvgButton","Title","Text","Modal","LoginModal","_ref","isLoginModal","setLoginModal","isModal","setOpenRegisterModal","_useState","useState","getCustomStyles","_useState2","_slicedToArray","customStyles","setCustomStyles","window","matchMedia","matches","overlay","backgroundColor","content","top","left","right","bottom","marginRight","transform","padding","maxWidth","maxHeight","borderRadius","useEffect","mediaQuery","handleResize","addEventListener","removeEventListener","isOpen","onRequestClose","style","contentLabel","onClick","width","height","xlinkHref","sprite","LoginForm","SignupSchema","Yup","shape","name","email","required","password","min","phone","dispatch","useDispatch","navigate","useNavigate","handleNavigate","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","stop","apply","arguments","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","onSubmit","_ref3","_callee2","data","e","_context2","preventDefault","registr","t0","alert","message","_x","_x2","_objectSpread","id","placeholder","type"],"sourceRoot":""}